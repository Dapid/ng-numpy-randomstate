from distutils.core import setup
from distutils.extension import Extension
from os import getcwd, unlink
from os.path import join

from Cython.Build import cythonize

pwd = getcwd()
configs = []

rngs = ['RNG_DUMMY', 'RNG_PCG_32', 'RNG_PCG_64', 'RNG_RANDOMKIT']


def write_config(config):
    flags = config['flags']
    with open('config.pxi', 'w') as config:
        config.write('# Autogenerated\n\n')
        for key in flags:
            val = '1' if flags[key] else '0'
            config.write('DEF ' + key + ' = ' + val + '\n')


for rng in rngs:
    flags = {k: False for k in rngs}
    flags[rng] = True

    file_name = rng.lower().replace('rng','').replace('_', '')
    sources = [join(pwd, file_name + '.pyx'),
               join(pwd, 'src', 'entropy', 'entropy.c'),
               join(pwd, 'core-rng.c')]
    include_dirs = [pwd]

    if flags['RNG_PCG_32']:
        sources += [join(pwd, 'src', 'pcg', p) for p in ('pcg-rngs-64.c', 'pcg-advance-64.c',
                                                         'pcg-output-64.c', 'pcg-output-32.c')]
        sources += [join(pwd, 'shims/pcg-32', 'pcg-32-shim.c')]

        defs = [('PCG_32_RNG', '1')]

        include_dirs += [join(pwd, 'src', 'pcg')]

    elif flags['RNG_PCG_64']:
        sources += [join(pwd, 'src', 'pcg', p) for p in ('pcg-advance-128.c', 'pcg-rngs-128.c')]
        sources += [join(pwd, 'shims/pcg-64', 'pcg-64-shim.c')]

        defs = [('PCG_64_RNG', '1'), ('PCG_HAS_128BIT_OPS', '1'), ('__SIZEOF_INT128__', '16')]

        include_dirs += [join(pwd, 'src', 'pcg')]

    elif flags['RNG_DUMMY']:
        sources += [join(pwd, 'src', 'dummy', p) for p in ('dummy.c',)]
        sources += [join(pwd, 'shims', 'dummy', 'dummy-shim.c')]

        defs = [('DUMMY_RNG', '1')]

        include_dirs += [join(pwd, 'src', 'dummy')]
    elif flags['RNG_RANDOMKIT']:
        sources += [join(pwd, 'src', 'random-kit', p) for p in ('random-kit.c',)]
        sources += [join(pwd, 'shims', 'random-kit', 'random-kit-shim.c')]

        defs = [('RANDOMKIT_RNG', '1')]

        include_dirs += [join(pwd, 'src', 'random-kit')]

    config = {'file_name': file_name,
              'sources': sources,
              'include_dirs': include_dirs,
              'defs': defs,
              'flags': {k: v for k, v in flags.iteritems()}}

    configs.append(config)

for config in configs:
    write_config(config)

    with open('core_rng.pyx', 'r') as original:
        with open(config['file_name'] + '.pyx', 'w') as mod:
            mod.writelines(original.read())

    setup(ext_modules=cythonize([Extension(config['file_name'],
                                           sources=config['sources'],
                                           include_dirs=config['include_dirs'],
                                           define_macros=config['defs'],
                                           extra_compile_args=['-std=c99','-O3','-funroll-loops']
                                           )]))
    unlink(join(pwd, config['file_name'] + '.pyx'))
    unlink(join(pwd, config['file_name'] + '.c'))

