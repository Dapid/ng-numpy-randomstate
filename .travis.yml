# Travis script that uses miniconda in place of the system installed python
# versions.  Allows substantial flexability for choosing versions of
# required packages and is simpler to use to test up-to-date scientific Python
# stack
group: edge
dist: trusty
sudo: required
language: python

services:
    - docker

before_install:
    - docker pull ubuntu:16.04

matrix:
  fast_finish: true
  include:
  - env:
    - PYTHON=2.7
    - NUMPY=1.9
    - CYTHON=0.22
  - env:
    - PYTHON=3.4
    - NUMPY=1.10
    - CYTHON=0.23
  - env:
    - PYTHON=3.5

before_install:
  - if [ ${TRAVIS_OS_NAME} = "osx" ]; then wget https://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - if [ ${TRAVIS_OS_NAME} = "linux" ]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=$HOME/miniconda/bin:$PATH
  - export PATH=$HOME/miniconda2/bin:$PATH
  - conda config --set always_yes yes
  - conda update --all --quiet
  - PKGS="python=${PYTHON}"
  - PKGS="${PKGS} numpy"; if [ ${NUMPY} ]; then PKGS="${PKGS}=${NUMPY}"; fi
  - PKGS="${PKGS} Cython"; if [ ${CYTHON} ]; then PKGS="${PKGS}=${CYTHON}"; fi
  - PKGS="${PKGS} pandas"; if [ ${PANDAS} ]; then PKGS="${PKGS}=${PANDAS}"; fi

# Install packages
install:
  - conda create -n randomstate-test ${PKGS} nose pip setuptools --quiet
  - source activate randomstate-test
  - pip install tempita
  - python setup.py install
  - export BUILD_DIR=$PWD
  - cd $HOME

script:
  - nosetests randomstate
  - cd $BUILD_DIR/randomstate
  - if [ ${PYTHON} = "2.7" ]; then python performance.py; fi
